name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PROJECT_NAME: Imogen
  BUILD_TYPE: Debug
  BUILD_DIR: Builds

jobs:

  build:
  
    runs-on: ubuntu-latest

    steps:
    
    - name: Install JUCE's Linux Deps and select g++ 9
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update && sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9
    
    - name: Get latest CMake
      uses: lukka/get-cmake@latest 
      
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true 
    
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --target Imogen_All --config $BUILD_TYPE
      
    - name: Zip
      working-directory: ${{github.workspace}}/build
      run: cmake -E tar cfv $PROJECT_NAME.zip --format=zip $PROJECT_NAME_artefacts

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}/build/$PROJECT_NAME.zip
        name: $PROJECT_NAME
        
 #   - name: Test
 #     working-directory: ${{github.workspace}}/build
 #     shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
 #     run: ctest -C $BUILD_TYPE
